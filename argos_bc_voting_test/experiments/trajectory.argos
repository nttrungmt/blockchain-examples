<?xml version="1.0" ?>

<!-- *************************************************** -->
<!-- * A fully commented XML is diffusion_1.xml. Refer * -->
<!-- * to it to have full information about what       * -->
<!-- * these options mean.                             * -->
<!-- *************************************************** -->

<argos-configuration>

  <!-- ************************* -->
  <!-- * General configuration * -->
  <!-- ************************* -->
  <framework>
    <system threads="0" />
    <experiment length="0"
                ticks_per_second="10"
                random_seed="124" />
  </framework>

  <!-- *************** -->
  <!-- * Controllers * -->
  <!-- *************** -->
  <controllers>
    <blockchain_voting_controller id="bvc"
                                  library="build/controllers/libfootbot_diffusion">
      <actuators>
        <!--<differential_steering implementation="default" /> -->
        <epuck_wheels implementation="default" />
        <leds implementation="default" medium="leds" />
        <epuck_range_and_bearing implementation="medium" medium="rab" range="0.22" />
      </actuators>
      <sensors>
        <!--<footbot_proximity implementation="default" show_rays="true" />-->
	<!--epuck_motor_ground implementation="rot_z_only" /-->
        <epuck_proximity implementation="default" show_rays="false" />
	<!--<footbot_light implementation="rot_z_only" show_rays="false" />-->
        <!--footbot_motor_ground implementation="rot_z_only" /-->
        <epuck_range_and_bearing implementation="medium" medium="rab" show_rays="true"/>
      </sensors>
      <!--<params alpha="7.5" delta="0.1" velocity="5" />-->
	  <params>   
     	<simulation_parameters
		   lamda="100"
		   turn="45"
		   exitFlag="true"
		   base_dir="./controllers/"
		   use_multiple_nodes="true"
		   use_background_geth_calls="true"
		   interface_path="interface.txt"
		   mapping_path="./config0.txt"
		   base_dir_raw="."
		   base_port="33000"
		   blockchain_path="./eth_data/data"
		   use_classical_approach="false"
		   regenerate_file="./regenerate0.sh"/> 
		   <!-- Sigma and G must be inserted in seconds, not in ticks; 
			  1 = Voter model; 2 = Direct comparison; 3 = Majority Rule--> 
      </params>
    </blockchain_voting_controller>

  </controllers>

  <!-- ****************** -->
  <!-- * Loop functions * -->
  <!-- ****************** -->
  <loop_functions library="build/loop_functions/libblockchain_voting_loop_functions"
                  label="blockchain_voting_loop_functions">
	<cells  
	  exit="true"	  
	  number_of_robots="2"
	  number_of_runs="1"
      
	  base_dir_loop="./controllers/"
	  base_dir_raw="."
	  data_dir="data/experiment1_decision1-node0-20-06-2018/"
      lamda="100"
	  turn="45"
	  miningdiff="1000000"
	  use_multiple_nodes="true"
	  miner_id="120"
	  miner_node="0"
	  
	  base_port="33000"
	  use_classical_approach="false"
	  subswarm_consensus="false"
	  regenerate_file="./regenerate0.sh"
	  blockchain_path="./eth_data/data"/>
  </loop_functions>

  <!-- *********************** -->
  <!-- * Arena configuration * -->
  <!-- *********************** -->
  <arena size="3, 5, 1" center="0,0,0.5">
     <floor id="floor"
           source="loop_functions"
           pixels_per_meter="50" />
    <!-- Place four boxes in a rectangle to delimit the arena -->
    <box id="wall_north" size="2,0.1,0.5" movable="false">
      <body position="0,2,0" orientation="0,0,0" />
    </box>
    <box id="wall_south" size="2,0.1,0.5" movable="false">
      <body position="0,-2,0" orientation="0,0,0" />
    </box>
    <box id="wall_east" size="0.1,4,0.5" movable="false">
      <body position="1,0,0" orientation="0,0,0" />
    </box>
    <box id="wall_west" size="0.1,4,0.5" movable="false">
      <body position="-1,0,0" orientation="0,0,0" />
    </box>

    <distribute>
      <position method="uniform" min="-1,-2,0" max="1,2,0" />
      <orientation method="gaussian" mean="0,0,0" std_dev="360,0,0" />
      <entity quantity="2" max_trials="20">
        <e-puck id="ep" >
          <controller config="bvc" />
        </e-puck>
      </entity>
    </distribute>

    <!--<distribute>
      <position method="uniform" min="-2,-2,0" max="2,2,0" />
      <orientation method="uniform" min="0,0,0" max="360,0,0" />
      <entity quantity="5" max_trials="100">
        <box id="b" size="0.3,0.3,0.5" movable="false" />
      </entity>
    </distribute>

    <distribute>
      <position method="uniform" min="-2,-2,0" max="2,2,0" />
      <orientation method="constant" values="0,0,0" />
      <entity quantity="5" max_trials="100">
        <cylinder id="c" height="0.5" radius="0.15" movable="false" />
      </entity>
    </distribute>-->
  </arena>

  <!-- ******************* -->
  <!-- * Physics engines * -->
  <!-- ******************* -->
  <physics_engines>
    <dynamics2d id="dyn2d" />
  </physics_engines>

  <!-- ********* -->
  <!-- * Media * -->
  <!-- ********* -->
  <media>
    <range_and_bearing id="rab" />
    <led id="leds" />
  </media>

  <!-- ****************** -->
  <!-- * Visualization * -->
  <!-- ****************** -->
  <visualization>
    <!--
        This shows how to add customized drawing in the world
        using the qt user functions.
        Check 'argos3 -q qt-opengl' for more help.
    -->
    <qt-opengl>
      <!--<user_functions library="build/loop_functions/libtrajectory_loop_functions"
                      label="trajectory_qtuser_functions" /> -->
    </qt-opengl>
  </visualization>

</argos-configuration>
